{
	"name": "DF_ReportLayer",
	"properties": {
		"folder": {
			"name": "DF_Task_001"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_DetailsPrepDestination",
						"type": "DatasetReference"
					},
					"name": "DetailsSource"
				},
				{
					"dataset": {
						"referenceName": "DS_EmpPrepDestination",
						"type": "DatasetReference"
					},
					"name": "EmpSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_FactReportDestination",
						"type": "DatasetReference"
					},
					"name": "SinkToReportLayer"
				},
				{
					"dataset": {
						"referenceName": "DS_DetailsReportDestination",
						"type": "DatasetReference"
					},
					"name": "SinkDetailsReport"
				},
				{
					"dataset": {
						"referenceName": "DS_EmpReportDestination",
						"type": "DatasetReference"
					},
					"name": "SinkEmpReport"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "SelectColumns",
					"description": "Selecting age, experience, username columns"
				},
				{
					"name": "SelectEmpColumns",
					"description": "Selecting username, designation columns"
				},
				{
					"name": "Select",
					"description": "Selecting required columns from the join table."
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          description as string,",
				"          mobile as string,",
				"          email as string,",
				"          username as string,",
				"          dob as date,",
				"          doj as date,",
				"          empId as integer,",
				"          workLocation as string,",
				"          gender as string,",
				"          age as integer,",
				"          experience as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DetailsSource",
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          designation as string,",
				"          username as string,",
				"          password as string,",
				"          reports_to as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> EmpSource",
				"SelectColumns, SelectEmpColumns join(SelectColumns@username == SelectEmpColumns@username,",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"DetailsSource select(mapColumn(",
				"          username,",
				"          empId,",
				"          age,",
				"          experience",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumns",
				"EmpSource select(mapColumn(",
				"          designation,",
				"          username",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectEmpColumns",
				"join1 select(mapColumn(",
				"          empId,",
				"          age,",
				"          experience,",
				"          designation,",
				"          username = SelectEmpColumns@username",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Select",
				"Select sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkToReportLayer",
				"DetailsSource sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkDetailsReport",
				"EmpSource sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkEmpReport"
			]
		}
	}
}